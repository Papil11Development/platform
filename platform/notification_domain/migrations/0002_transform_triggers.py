# Generated by Django 3.2.12 on 2022-04-14 11:47

from django.db import migrations

from platform_lib.managers import TriggerMetaManager
from platform_lib.meta_language_parser import MetaLanguageParser


def translate_location_trigger(apps, schema_editor):
    trigger_model = apps.get_model('notification_domain', 'Trigger')
    label_model = apps.get_model('label_domain', 'Label')

    location_triggers = trigger_model.objects.filter(meta__has_key="limit")

    for trigger in location_triggers:
        old_meta = trigger.meta
        location_id = old_meta.get('location_id')
        limit = old_meta.get('limit', 1)
        lifetime = old_meta.get('lifetime', 10)

        location = label_model.objects.get(id=location_id)

        new_meta = (TriggerMetaManager()
                    .add_location_overflow_variable([location], limit, '>')
                    .update_notification_params({'lifetime': lifetime})
                    .get_meta())

        trigger.meta = new_meta
        trigger.save()


def rollback(apps, schema_editor):
    trigger_model = apps.get_model('notification_domain', 'Trigger')

    location_triggers = trigger_model.objects.filter(meta__condition_language__variables__0_v__type="location_overflow")

    for trigger in location_triggers:
        old_meta = trigger.meta

        manager = TriggerMetaManager(old_meta)
        meta_manager = MetaLanguageParser(manager.get_condition_language())
        kwargs = meta_manager.get_variable_kwargs_by_number(0)

        lifetime = manager.get_trigger_lifetime()
        limit = kwargs.get('target_limit')
        location_id = meta_manager.get_places(0)[0].get('uuid')

        new_meta = {
            'lifetime': lifetime,
            'limit': limit,
            'location_id': location_id
        }

        trigger.meta = new_meta
        trigger.save()


class Migration(migrations.Migration):
    dependencies = [
        ('notification_domain', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(translate_location_trigger, rollback)
    ]
